/******************************************************************************/
/*                                                                            */
/*  СБОРЩИК ОБЪЕКТОВ                                                          */
/*                                                                            */
/*  ОПИСАНИЕ                                                                  */
/*  Запуск сборщика рекомендуется выполнять в пакетном задании, так как он    */
/*  строит свой список библиотек                                              */
/*                                                                            */
/*  ПАРАМЕТРЫ                                                                 */
/*  @SRCLIB  - библиотека, где расположен файл исходного кода;                */
/*  @SRCFILE - имя файла исходного кода;                                      */
/*  @DSTLIB  - библиотека, куда будут помещены собранные программы;           */
/*                                                                            */
/******************************************************************************/

PGM PARM(&@SRCLIB &@SRCFILE &@DSTLIB)

  /* ВХОДНЫЕ ПАРАМЕТРЫ ********************************************************/
  DCL        VAR(&@SRCLIB)    TYPE(*CHAR) LEN(10)
  DCL        VAR(&@SRCFILE)   TYPE(*CHAR) LEN(10)
  DCL        VAR(&@DSTLIB)    TYPE(*CHAR) LEN(10)



  /* ВНУТРЕННИЕ ПЕРЕМЕННЫЕ ****************************************************/
  DCL        VAR(&TAG)        TYPE(*LGL)           VALUE('0')
  DCL        VAR(&SRCLIB)     TYPE(*CHAR) LEN(10)  VALUE(CSNSRC)
  DCL        VAR(&SRCFILE)    TYPE(*CHAR) LEN(10)  VALUE(STRING)
  DCL        VAR(&DSTLIB)     TYPE(*CHAR) LEN(10)  VALUE(CSNTST)
  DCL        VAR(&LOWKEY)     TYPE(*CHAR) LEN(4)
  DCL        VAR(&MSGKEY)     TYPE(*CHAR) LEN(4)
  DCL        VAR(&HIKEY)      TYPE(*CHAR) LEN(4)
  DCL        VAR(&MSG)        TYPE(*CHAR) LEN(132)
  DCL        VAR(&MSGID)      TYPE(*CHAR) LEN(7)
  DCL        VAR(&I)          TYPE(*INT)  LEN(2)
  DCL        VAR(&SEV)        TYPE(*DEC)  LEN(2)
  DCL        VAR(&RTNTYPE)    TYPE(*CHAR) LEN(2)
  DCL        VAR(&SIGN)       TYPE(*CHAR) LEN(1)

  CALLSUBR   INITIALIZE                                                         /* Инициализация переменных */



  /* ОЧИСТКА ******************************************************************/
  DLTPGM     PGM(&DSTLIB/STRING)
  MONMSG     MSGID(CPF0000)




  /* КОМПИЛЯЦИЯ МОДУЛЕЙ *******************************************************/
  CHGLIBL    LIBL(OLIDEV &SRCLIB)

  CRTCPPMOD  MODULE(QTEMP/MAIN) SRCFILE(&SRCLIB/STRING) SRCMBR(MAIN$) +
             DBGVIEW(*ALL) OPTION(*EVENTF *SHOWUSR) LANGLVL(*EXTENDED0X) +
             PFROPT(*STRDONLY) CHECKOUT(*COND *PARM *REACH *UNUSED)
  MONMSG     MSGID(CPF0000 MCH0000 RPG0000) EXEC(GOTO BADMOD)

  CRTCPPMOD  MODULE(QTEMP/ISTRING) SRCFILE(&SRCLIB/STRING) SRCMBR(ISTRING$) +
             DBGVIEW(*ALL) OPTION(*EVENTF *SHOWUSR) LANGLVL(*EXTENDED0X) +
             PFROPT(*STRDONLY) CHECKOUT(*COND *PARM *REACH *UNUSED)
  MONMSG     MSGID(CPF0000 MCH0000 RPG0000) EXEC(GOTO BADMOD)




  /* СБОРКА ПРОГРАММ **********************************************************/
  CHGLIBL    LIBL(QTEMP)
  SNDPGMMSG  MSG('BEGIN MONITORING') KEYVAR(&LOWKEY)

  CRTPGM     PGM(&DSTLIB/STRING) +
             MODULE(MAIN ISTRING) +
             BNDSRVPGM(CSNTST/OLI)
  MONMSG     MSGID(CPF0000 MCH0000 RPG0000) EXEC(GOTO BADBUILD)




  /* ТОЧКИ ВЫХОДА *************************************************************/
  GOOD:                                                                         /* Все объекты собраны успешно */
  SNDPGMMSG  MSG('BEGIN MONITORING') KEYVAR(&LOWKEY)
  SNDPGMMSG  MSGID(CPA2401) MSGF(QCPFMSG) MSGTYPE(*INFO) +
             MSGDTA('Done successful!')
  GOTO       FINALLY

  BADFILE:                                                                      /* Не удалось выполнить компиляцию файла */
  SNDPGMMSG  MSG('BEGIN MONITORING') KEYVAR(&LOWKEY)
  SNDPGMMSG  MSGID(CPA2401) MSGF(QCPFMSG) MSGTYPE(*DIAG) +
             MSGDTA('File compilation failed...')
  GOTO       FINALLY

  BADSQLPRE:                                                                    /* Не удалось выполнить SQL препроцессинг */
  SNDPGMMSG  MSG('BEGIN MONITORING') KEYVAR(&LOWKEY)
  SNDPGMMSG  MSGID(CPA2401) MSGF(QCPFMSG) MSGTYPE(*DIAG) +
             MSGDTA('SQL preprocessing failed...')
  GOTO       FINALLY

  BADRES:                                                                       /* Не удалось выполнить компиляцию ресурсов */
  SNDPGMMSG  MSGID(CPA2401) MSGF(QCPFMSG) MSGTYPE(*DIAG) +
             MSGDTA('Resource compilation failed...')
  GOTO       FINALLY

  BADMOD:                                                                       /* Не удалось выполнить компиляцию модуля */
  SNDPGMMSG  MSG('BEGIN MONITORING') KEYVAR(&LOWKEY)
  SNDPGMMSG  MSGID(CPA2401) MSGF(QCPFMSG) MSGTYPE(*DIAG) +
             MSGDTA('Module compilation failed...')
  GOTO       FINALLY

  BADBUILD:                                                                     /* Не удалось выполнить сборку программы */
  SNDPGMMSG  MSGID(CPA2401) MSGF(QCPFMSG) MSGTYPE(*DIAG) +
             MSGDTA('Program build failed...')
  GOTO       FINALLY




  /* ИЗВЛЕЧЕНИЕ СООБЩЕНИЙ ИЗ ЛОГА ЗАДАНИЯ В ФАЙЛ ОШИБОК ***********************/
  FINALLY:
  SNDPGMMSG  MSG('END MONITORING') KEYVAR(&HIKEY)

  RMVMSG     MSGKEY(&LOWKEY)
  RMVMSG     MSGKEY(&HIKEY)
  CHGVAR     VAR(%BIN(&MSGKEY 1 4)) VALUE(%BIN(&LOWKEY 1 4) + 1)

  DLTF       FILE(QTEMP/LOGMSG)
  MONMSG     MSGID(CPF0000 MCH0000 RPG0000)
  CRTPF      FILE(QTEMP/LOGMSG) RCDLEN(300) MAXMBRS(*NOMAX)

  RUNSQL     SQL('insert into QTEMP/LOGMSG values +
                  (''TIMESTAMP  0 20210211140117''), +
                  (''PROCESSOR  0 000 1'')') +
             COMMIT(*NONE)

  LOOP:                                                                         /* Цикл извлечения сообщений */
    RCVMSG PGMQ(*SAME (*)) MSGKEY(&MSGKEY) RMV(*NO) +
           MSG(&MSG) MSGID(&MSGID) SEV(&SEV) RTNTYPE(&RTNTYPE)
    MONMSG CPF2410 EXEC(GOTO CONTINUE)

    DOFOR &I 1 %LEN(&MSG)
      CHGVAR VAR(&I) VALUE(%SCAN('''' &MSG))
      IF (&I = 0) LEAVE
      CHGVAR VAR(%SUBSTRING(&MSG &I 1)) VALUE('"')
    ENDDO

    SELECT
      WHEN COND(&RTNTYPE = '15') THEN(CHGVAR VAR(&SIGN) VALUE('E'))
      WHEN COND(&RTNTYPE = '02') THEN(DO)
        IF (&SEV *LE 10)         THEN(CHGVAR VAR(&SIGN) VALUE('W'))
        ELSE                          CHGVAR VAR(&SIGN) VALUE('S')
      ENDDO
      OTHERWISE                   CMD(CHGVAR VAR(&SIGN) VALUE('I'))
    ENDSELECT

    RUNSQL SQL('insert into QTEMP/LOGMSG values +
                ( +
                  ''ERROR      1 001 0 000000 000000 000 000000 000 ' +
                  *CAT &MSGID *CAT ' ' *CAT &SIGN *CAT ' ' *CAT  +
                  %CHAR(&SEV) *CAT '132 ' *CAT %TRIM(&MSG) *CAT ''' +
                )') +
           COMMIT(*NONE)

    CONTINUE:
    CHGVAR VAR(%BIN(&MSGKEY 1 4)) VALUE(%BIN(&MSGKEY 1 4) + 1)
    IF (&MSGKEY *LT &HIKEY) GOTO LOOP
  ENDLOOP:



  /* ПЕРЕНОС СООБЩЕНИЙ В ФАЙЛ ОШИБОК ******************************************/
  CPYF       FROMFILE(QTEMP/LOGMSG) TOFILE(&SRCLIB/EVFEVENT) +
             FROMMBR(*ALL) TOMBR(*FROMMBR) MBROPT(*ADD) CRTFILE(*YES) +
             FMTOPT(*NOCHK)

  CPYF       FROMFILE(&DSTLIB/EVFEVENT) TOFILE(&SRCLIB/EVFEVENT) +
             FROMMBR(*ALL) TOMBR(*FROMMBR) MBROPT(*ADD) FMTOPT(*NOCHK)
  MONMSG     MSGID(CPF0000 MCH0000 RPG0000)
  DLTF       FILE(&DSTLIB/EVFEVENT)
  MONMSG     MSGID(CPF0000 MCH0000 RPG0000)

  CPYF       FROMFILE(QTEMP/EVFEVENT) TOFILE(&SRCLIB/EVFEVENT) +
             FROMMBR(*ALL) TOMBR(*FROMMBR) MBROPT(*ADD) FMTOPT(*NOCHK)
  MONMSG     MSGID(CPF0000 MCH0000 RPG0000)
  DLTF       FILE(QTEMP/EVFEVENT)
  MONMSG     MSGID(CPF0000 MCH0000 RPG0000)



  /* ПОДПРОЦЕДУРА ИНИЦИАЛИЗАЦИИ ************************************************/
  SUBR INITIALIZE

  CHKOBJ     OBJ(QSYS/&@SRCLIB) OBJTYPE(*LIB)                                   /* Обработка входных параметров */
  MONMSG     MSGID(CPF0000) EXEC(CHGVAR VAR(&TAG) VALUE('1'))
  IF (*NOT &TAG) CHGVAR VAR(&SRCLIB) VALUE(&@SRCLIB)
  CHGVAR     VAR(&TAG) VALUE('0')

  CHKOBJ     OBJ(&SRCLIB/&@SRCFILE) OBJTYPE(*FILE)
  MONMSG     MSGID(CPF0000) EXEC(CHGVAR VAR(&TAG) VALUE('1'))
  IF (*NOT &TAG) CHGVAR VAR(&SRCFILE) VALUE(&@SRCFILE)
  CHGVAR     VAR(&TAG) VALUE('0')

  CHKOBJ     OBJ(QSYS/&@DSTLIB) OBJTYPE(*LIB)
  MONMSG     MSGID(CPF0000) EXEC(CHGVAR VAR(&TAG) VALUE('1'))
  IF (*NOT &TAG) CHGVAR VAR(&DSTLIB) VALUE(&@DSTLIB)
  CHGVAR     VAR(&TAG) VALUE('0')

  DLTF       FILE(&SRCLIB/EVFEVENT)                                             /* Удаление файла ошибок */
  MONMSG     MSGID(CPF0000 MCH0000 RPG0000)

  DLTF       FILE(&DSTLIB/EVFEVENT)
  MONMSG     MSGID(CPF0000 MCH0000 RPG0000)

  DLTF       FILE(QTEMP/EVFEVENT)
  MONMSG     MSGID(CPF0000 MCH0000 RPG0000)

  CHGCURLIB  CURLIB(*CRTDFT)                                                    /* Удаление текущей библиотеки из либла */

  ENDSUBR



ENDPGM

